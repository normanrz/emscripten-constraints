module("users.timfelgentreff.backtalk.backtalk").requires().toRun(function(){"undefined"==typeof Set&&(Global.Set=function(){throw"Set not supported"}),Object.subclass("backtalk.Object",{get uuid(){return this._uuid||(this._uuid=Strings.newUUID())}}),backtalk.Object.subclass("backtalk.Variable",{addConstraint:function(cnstr){-1===this.constraints.indexOf(cnstr)&&this.constraints.push(cnstr)},removeConstraint:function(cnstr){this.constraints.remove(cnstr)},nextValue:function(){this.currentValue&&this.valuesToExplore.remove(this.currentValue);var nextValue=this.valuesToExplore[0];return this.currentValue=nextValue,nextValue},resetCurrentValue:function(){this.currentValue=void 0},domainWipedOut:function(){return 0===this.valuesToExplore.length},isInstantiated:function(){return void 0!==this.currentValue&&null!==this.currentValue},filterToReject:function(filter){this.valuesToExplore=this.valuesToExplore.reject(filter)},filterToSelect:function(filter){this.valuesToExplore=this.valuesToExplore.filter(filter)},get valuesToExplore(){return this._valuesToExplore},set valuesToExplore(ary){ary=ary instanceof Set?Array.from(ary.values()):ary.uniq(),this._valuesToExplore=ary,0===this._valuesToExplore.length&&this.resetCurrentValue()},initialize:function(){this.constraints=[],this.valuesToExplore=[]},reset:function(){var idx=this.domain.indexOf(this.currentValue);if(-1!==idx){var d=this.domain.slice();d.splice(idx,1),d=[this.currentValue].concat(d),this.valuesToExplore=d}else this.valuesToExplore=this.domain;this.resetCurrentValue()},get domain(){return this._domain},set domain(d){d=d instanceof Set?Array.from(d.values()):d.uniq(),this._domain=d,this.valuesToExplore=d}}),Object.extend(backtalk.Variable,{labelDomain:function(l,d){var v=new backtalk.Variable;return v.label=l,v.domain=d,v},labelFromTo:function(l,lower,upper){var v=new backtalk.Variable;return v.label=l,v.domain=Array.range(lower,upper),v}}),backtalk.Object.subclass("backtalk.Solver",{allSolutions:function(){this.reset();for(var allSolutions=[];!this.explorationFinished();)if(this.exploreCspStep(),this.solutionFound()){var solution=this.solution();-1===allSolutions.indexOf(solution)&&allSolutions.push(solution),this.stepBackward()}return allSolutions.uniq()},chooseAPreviousContext:function(){return this.contexts.last()},chooseAVariable:function(){return this.backTrackFlag?this.currentVariable:this.variables().detect(function(v){return!v.isInstantiated()})},chooseVariableAndValue:function(){this.currentVariable=this.chooseAVariable(),this.currentVariable.nextValue()},exploreCspStep:function(){for(;!this.domainWipedOut();)if(this.stepForward(),this.solutionFound())return this;this.stepBackward()},firstSolution:function(){for(this.reset();!this.solutionFound()&&!this.explorationFinished();)this.exploreCspStep();return this.solution()},propagateInstantiationFor:function(constraint){return constraint.filter()},propagateInstantiationOfCurrentVariable:function(){this.currentVariable.currentValue&&(this.currentVariable.valuesToExplore=[this.currentVariable.currentValue]),this.sortedConstraintsForPropagation().detect(function(constraint){return this.propagateInstantiationFor(constraint),constraint.domainWipedOut()?!0:void 0}.bind(this))},sortedConstraintsForPropagation:function(){return this.currentVariable.constraints},stepBackward:function(){if(0===this.contexts.length)return this;var ctx=this.chooseAPreviousContext();this.restoreContext(ctx),this.backTrackFlag=!0},stepForward:function(){this.chooseVariableAndValue(),this.saveContext(),this.propagateInstantiationOfCurrentVariable(),this.backTrackFlag=!1},set currentVariable(v){this._currentVariable=v,this.firstChosenVariable||(this.firstChosenVariable=v)},get currentVariable(){return this._currentVariable},solution:function(){return this.solutionFound()?this.variables().inject({keys:[]},function(solution,v){return solution[v.uuid]=v.currentValue,solution.keys.push(v),solution}):void 0},variables:function(){return this.csp.variables},domainWipedOut:function(){return this.currentVariable&&this.backTrackFlag&&0===this.currentVariable.valuesToExplore.length?!0:this.variables().any(function(v){return v.domainWipedOut()})},explorationFinished:function(){return this.firstChosenVariable?this.firstChosenVariable===this.currentVariable&&0===this.firstChosenVariable.valuesToExplore.length:this.variables().any(function(v){return 0===v.domain.length})},solutionFound:function(){return this.variables().every(function(v){return v.isInstantiated()})?this.csp.constraints().every(function(c){return c.isSatisfied()}):!1},initialize:function(csp){this.csp=csp,this.reset()},reset:function(){this.csp&&this.csp.reset(),this.contexts=[],this.currentVariable=void 0,this.firstChosenVariable=void 0,this.backTrackFlag=!1},restoreContext:function(ctx){this.contexts.remove(ctx),ctx.restoreInSolver(this)},saveContext:function(){this.contexts.push(new backtalk.Context(this))}}),Object.extend(backtalk.Solver,{on:function(csp){var solver=new backtalk.Solver;return solver.csp=csp,solver}}),backtalk.Object.subclass("backtalk.Context",{initialize:function(solver){solver&&this.fromSolver(solver)},currentValueFor:function(v){return this.currentValuesDict[v.uuid]},fromSolver:function(solver){this.valuesToExploreDict={keys:[]},this.currentValuesDict={keys:[]},solver.variables().each(function(v){this.valuesToExploreDict[v.uuid]=v.valuesToExplore.slice(),this.valuesToExploreDict.keys.push(v),v.isInstantiated()&&(this.currentValuesDict[v.uuid]=v.currentValue,this.currentValuesDict.keys.push(v))}.bind(this)),this.currentVariable=solver.currentVariable},restoreInSolver:function(solver){this.valuesToExploreDict.keys.each(function(v){v.valuesToExplore=this.valuesToExploreDict[v.uuid]}.bind(this)),this.currentValuesDict.keys.each(function(v){v.currentValue=this.currentValuesDict[v.uuid]}.bind(this)),solver.currentVariable=this.currentVariable},valuesToExploreFor:function(v){return this.valuesToExploreDict[v.uuid]}}),Object.extend(backtalk.Context,{fromSolver:function(solver){return new backtalk.Context(solver)}}),backtalk.Object.subclass("backtalk.Constraint",{domainWipedOut:function(){return this.variables().some(function(v){return v.domainWipedOut()})},isInstantiated:function(){return this.variables().every(function(v){return v.isInstantiated()})},filter:function(){this.enforceArcConsistency()},isNotConsistent:function(){return!this.isConsistent()},isSatisfied:function(){return this.isInstantiated()&&this.isConsistent()}}),backtalk.Constraint.subclass("backtalk.UnaryConstraint",{initialize:function(v){this.variable=v},valuesToExplore:function(){return this.variable.valuesToExplore},get variable(){return this._variable},set variable(v){this._variable&&this._variable.removeConstraint(this),this._variable=v,v&&v.addConstraint(this)},variables:function(){return[this.variable]}}),backtalk.Constraint.subclass("backtalk.BinaryConstraint",{initialize:function(a,b){this.variableA=a,this.variableB=b},valuesToExploreA:function(){return this.variableA.valuesToExplore},valuesToExploreB:function(){return this.variableB.valuesToExplore},get variableA(){return this._variableA},set variableA(v){this._variableA&&this._variableA.removeConstraint(this),this._variableA=v,v.addConstraint(this)},get variableB(){return this._variableB},set variableB(v){this._variableB&&this._variableB.removeConstraint(this),this._variableB=v,v&&v.addConstraint(this)},variables:function(){return[this.variableA,this.variableB].uniq()}}),backtalk.Object.subclass("backtalk.CSP",{initialize:function(){this.variables=[]},addVariable:function(v){-1===this.variables.indexOf(v)&&this.variables.push(v)},constraints:function(){return this.variables.map(function(v){return v.constraints}).flatten().uniq()},domainWipedOut:function(){return this.variables.some(function(v){return v.domainWipedOut()})},instantiatedConstraints:function(){return this.constraints().select(function(c){return c.isInstantiated()})},removeVariable:function(v){this.variables.remove(v)},reset:function(){this.variables.each(function(v){v.reset()})}}),Object.extend(backtalk.CSP,{labelVariables:function(l,v){var csp=new backtalk.CSP;return csp.label=l,csp.variables=v,csp}})}),module("users.timfelgentreff.backtalk.constraints").requires("users.timfelgentreff.backtalk.backtalk").toRun(function(){backtalk.BinaryConstraint.subclass("backtalk.EqualityConstraint",{enforceArcConsistency:function(){var intersection=this.valuesToExploreA().intersect(this.valuesToExploreB());this.variableA.valuesToExplore=intersection,this.variableB.valuesToExplore=intersection},isConsistent:function(){if(this.variableA.currentValue==this.variableB.currentValue)return!0;try{return this.variableA.equals(this.variableB)}catch(_){}try{return this.variableA.eq(this.variableB)}catch(_){}return!1}}),backtalk.BinaryConstraint.subclass("backtalk.InequalityConstraint",{enforceArcConsistency:function(){if(!(this.valuesToExploreA().length>1&&this.valuesToExploreB().length>1)){if(0===this.valuesToExploreA().length)return this.variableB.valuesToExplore=[],void 0;if(0===this.valuesToExploreB().length)return this.variableA.valuesToExplore=[],void 0;var self=this;this.variableB.filterToReject(function(value){return 0===self.valuesToExploreA().without(value).length}),this.variableA.filterToReject(function(value){return 0===self.valuesToExploreB().without(value).length})}},isConsistent:function(){var self=this;return this.valuesToExploreA().every(function(value){return self.valuesToExploreB().without(value).length>0})&&this.valuesToExploreB().every(function(value){return self.valuesToExploreA().without(value).length>0})}}),backtalk.BinaryConstraint.subclass("backtalk.FunctionBinaryConstraint",{initialize:function($super,a,b,func){$super(a,b),this.func=func},enforceArcConsistency:function(){function cond(){self.variableA.filterToSelect(function(a){return self.valuesToExploreB().some(function(b){return self.func(a,b)})}),self.variableB.filterToSelect(function(b){return self.valuesToExploreA().some(function(a){return self.func(a,b)})}),previousSizeA=sizeA,sizeA=self.valuesToExploreA().length,previousSizeB=sizeB,sizeB=self.valuesToExploreB().length}var previousSizeA,previousSizeB,sizeA=this.valuesToExploreA().length,sizeB=this.valuesToExploreB().length,self=this;for(cond();previousSizeA!==sizeA&&previousSizeB!==sizeB;)cond()},isConsistent:function(){var condA=this.valuesToExploreA().every(function(a){return this.valuesToExploreB().some(function(b){return this.func(a,b)}.bind(this))}.bind(this)),condB=this.valuesToExploreB().every(function(b){return this.valuesToExploreA().some(function(a){return this.func(a,b)}.bind(this))}.bind(this));return condA&&condB}}),backtalk.UnaryConstraint.subclass("backtalk.FunctionUnaryConstraint",{enforceArcConsistency:function(){this.variable.filterToSelect(function(v){return this.func(v)}.bind(this))},isConsistent:function(){return this.valuesToExplore().every(function(v){return this.func(v)}.bind(this))},initialize:function($super,v,func){$super(v),this.func=func}})}),module("users.timfelgentreff.backtalk.backtalk_ext").requires("users.timfelgentreff.backtalk.backtalk","users.timfelgentreff.backtalk.constraints","users.timfelgentreff.babelsberg.constraintinterpreter").toRun(function(){Object.subclass("BacktalkSolver",{initialize:function(){this.csp=new backtalk.CSP,this.solver=new backtalk.Solver(this.csp)},reset:function(){this.solver.reset()},constraintVariableFor:function(value,ivarname){return void 0!==value||"is"!==ivarname?new BacktalkVariable(ivarname,value,this):void 0},solve:function(){var solution=this.solver.firstSolution();if(!solution)throw new Error("Backtalk constraint unsatisfiable.")},always:function(opts,func){var ctx=opts.ctx,needsFunc=!1;Object.defineProperty(func,"allowUnsolvableOperations",{get:function(){return needsFunc=!0,!0}}),func.allowUnsolvableOperations=!0,func.varMapping=ctx;var cobj=new Constraint(func,this);return 1===cobj.constraintobjects.length&&needsFunc&&this.convertTestToFuncConstraint(cobj,func,opts),cobj},convertTestToFuncConstraint:function(cobj,func){var varA,varB,solver=this,test=function(a,b){var vB,vA=varA.currentValue;varB&&(vB=varB.currentValue),varA.currentValue=a,varB&&(varB.currentValue=b);try{return func()}finally{varA.currentValue=vA,varB&&(varB.currentValue=vB)}};if(1===cobj.constraintvariables.length)varA=cobj.constraintvariables[0].externalVariables(this).variable,cobj.constraintobjects[0]=BacktalkConstraint.unaryFunc(varA,test);else{var vars=cobj.constraintvariables.map(function(v){return v.externalVariables(solver)});varA=vars[0].variable,varB=vars[1].variable,cobj.constraintobjects[0]=BacktalkConstraint.binaryFunc(varA,varB,test)}},weight:200,isConstraintObject:!0}),Object.subclass("BacktalkVariable",{initialize:function(name,value,solver){var initialDomain;initialDomain="number"==typeof value||value instanceof Number?Array.range(-100,500):"boolean"==typeof value||value instanceof Boolean?[!0,!1]:[value],this.variable=backtalk.Variable.labelDomain(name,initialDomain),this.variable.currentValue=value,this.solver=solver,this.solver.csp.addVariable(this.variable)},isConstraintObject:!0,suggestValue:function(v){var rhs=this.ensureVariable(v),c=BacktalkConstraint.cnEquals(this.variable,rhs),oldValues=this.solver.csp.variables.map(function(v){return[v,v.currentValue]});c.enable();try{this.solver.solve()}catch(e){throw oldValues.each(function(v){v[0].currentValue=v[1]}),e}finally{c.disable(),this.solver.csp.removeVariable(rhs),this.variable.removeConstraint(c)}},value:function(){return this.variable.currentValue},setReadonly:function(bool){if(bool&&!this.readonlyConstraint){var c=this.cnEquals(this.value());this.readonlyConstraint=c}else!bool&&this.readonlyConstraint&&this.variable.removeConstraint(this.readonlyConstraint)},isReadonly:function(){return!!this.readonlyConstraint},cnEquals:function(v){var rhs=this.ensureVariable(v);return BacktalkConstraint.cnEquals(this.variable,rhs)},cnNeq:function(v){var rhs=this.ensureVariable(v);return BacktalkConstraint.cnNeq(this.variable,rhs)},cnNotIdentical:function(v){return this.cnNeq(v)},cnIdentical:function(v){return this.cnEquals(v)},cnIn:function(ary){var domain;if(domain=ary instanceof this.constructor?ary.value():ary,!(domain instanceof Array))throw new Error("Domain has to be an array");if(0===domain.length)throw new Error("Domain cannot be empty");return this.variable.domain=domain,BacktalkConstraint.true(this.variable)},ensureVariable:function(v){var rhs=v;return v instanceof this.constructor?rhs=v.variable:v instanceof backtalk.Variable||(rhs=new backtalk.Variable.labelDomain("constant"+v,[v])),this.solver.csp.addVariable(rhs),rhs}}),Object.subclass("BacktalkConstraint",{initialize:function(vars,constraint){this.variables=vars,this.constraint=constraint,this.disable()},enable:function(){var constraint=this.constraint;constraint&&this.variables.each(function(v){v.addConstraint(constraint)})},disable:function(){var constraint=this.constraint;constraint&&this.variables.each(function(v){v.removeConstraint(constraint)})},isConstraintObject:!0}),Object.extend(BacktalkConstraint,{"true":function(variable){return new BacktalkConstraint([variable],new backtalk.EqualityConstraint(variable,variable))},binaryFunc:function(v1,v2,func){return new BacktalkConstraint([v1,v2],new backtalk.FunctionBinaryConstraint(v1,v2,func))},unaryFunc:function(v,func){return new BacktalkConstraint([v],new backtalk.FunctionUnaryConstraint(v,func))},cnEquals:function(v1,v2){return new BacktalkConstraint([v1,v2],new backtalk.EqualityConstraint(v1,v2))},cnNeq:function(v1,v2){return new BacktalkConstraint([v1,v2],new backtalk.InequalityConstraint(v1,v2))}})});